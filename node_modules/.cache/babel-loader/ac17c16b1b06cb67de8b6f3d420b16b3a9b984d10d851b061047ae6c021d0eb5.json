{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Search } from '@element-plus/icons-vue';\nimport { useRouter } from 'vue-router';\nimport countries from '@/data/countries.json';\nexport default {\n  components: {\n    Search\n  },\n  data() {\n    return {\n      restaurants: [],\n      state1: '',\n      selected: '',\n      meta: {}\n    };\n  },\n  methods: {\n    querySearch(queryString, cb) {\n      var restaurants = this.restaurants;\n      var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n      // 调用 callback 返回建议列表的数据\n      cb(results);\n    },\n    createFilter(queryString) {\n      return restaurant => {\n        return restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    loadAll() {\n      return this.countryNameArr;\n    },\n    handleSelect(item) {\n      this.selected = item.value;\n      this.meta = JSON.stringify(this.countryInfo[this.selected]);\n\n      //router传值，国家名和附带信息\n      this.$router.push({\n        name: `country`,\n        query: {\n          title: `${this.selected}`,\n          metaInfo: `${this.meta}`\n        }\n      });\n\n      // this.query();\n      console.log('选择的国家', this.selected);\n      console.log('选择的信息', this.meta);\n    }\n  },\n  mounted() {\n    this.restaurants = this.loadAll();\n  },\n  setup() {\n    const $router = useRouter();\n    console.log($router, 'router');\n\n    //read in data\n    let data = countries.countries;\n    let countryNameArr = [];\n    let countryInfo = [];\n\n    // console.log(\"国家数据\", data);\n\n    for (var i = 0; i < data.length; i++) {\n      var countryName = data[i].name;\n      countryNameArr.push({\n        \"value\": data[i].name\n      });\n      countryInfo[countryName] = data[i].topics;\n    }\n\n    // console.log(\"国家名称\",countryNameArr);\n    // console.log(\"国家信息\", countryInfo);\n\n    return {\n      data,\n      countryNameArr,\n      countryInfo\n    };\n  }\n};","map":{"version":3,"mappings":";AAsBA,SAASA,MAAK,QAAS,yBAAyB;AAChD,SAASC,SAAQ,QAAS,YAAY;AAEtC,OAAOC,SAAQ,MAAO,uBAAsB;AAE5C,eAAe;EACXC,UAAU,EAAE;IAACH;EAAM,CAAC;EACpBI,IAAI,GAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,CAAC;IACT,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,WAAW,CAACC,WAAW,EAAEC,EAAE,EAAE;MAC3B,IAAIP,WAAU,GAAI,IAAI,CAACA,WAAW;MAClC,IAAIQ,OAAM,GAAIF,WAAU,GAAIN,WAAW,CAACS,MAAM,CAAC,IAAI,CAACC,YAAY,CAACJ,WAAW,CAAC,IAAIN,WAAW;MAC5F;MACAO,EAAE,CAACC,OAAO,CAAC;IACb,CAAC;IACDE,YAAY,CAACJ,WAAW,EAAE;MACxB,OAAQK,UAAU,IAAK;QACvB,OAAQA,UAAU,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,OAAO,CAACR,WAAW,CAACO,WAAW,EAAE,MAAM,CAAC;MAC/E,CAAC;IACH,CAAC;IAEDE,OAAO,GAAG;MACR,OAAO,IAAI,CAACC,cAAa;IAC3B,CAAC;IAEDC,YAAY,CAACC,IAAI,EAAE;MAEjB,IAAI,CAAChB,QAAO,GAAIgB,IAAI,CAACN,KAAK;MAC1B,IAAI,CAACT,IAAG,GAAIgB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACC,WAAW,CAAC,IAAI,CAACnB,QAAQ,CAAC,CAAC;;MAE3D;MACA,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,SAAQ;QACdC,KAAK,EAAE;UACLC,KAAK,EAAG,GAAE,IAAI,CAACxB,QAAS,EAAC;UACzByB,QAAQ,EAAG,GAAE,IAAI,CAACxB,IAAK;QACzB;MACF,CAAC;;MAED;MACAyB,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC3B,QAAQ,CAAC;MACnC0B,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC1B,IAAI;IAChC;EACF,CAAC;EAED2B,OAAO,GAAG;IACR,IAAI,CAAC9B,WAAU,GAAI,IAAI,CAACe,OAAO,EAAE;EACnC,CAAC;EAEDgB,KAAK,GAAG;IACN,MAAMT,OAAM,GAAI1B,SAAS,EAAE;IAC3BgC,OAAO,CAACC,GAAG,CAACP,OAAO,EAAE,QAAQ,CAAC;;IAE9B;IACE,IAAIvB,IAAG,GAAIF,SAAS,CAACA,SAAS;IAC9B,IAAImB,cAAa,GAAI,EAAE;IACvB,IAAIK,WAAU,GAAI,EAAE;;IAEpB;;IAEA,KAAI,IAAIW,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACjC,IAAI,CAACkC,MAAM,EAAED,CAAC,EAAE,EAAC;MAC5B,IAAIE,WAAU,GAAInC,IAAI,CAACiC,CAAC,CAAC,CAACR,IAAI;MAE9BR,cAAc,CAACO,IAAI,CAAC;QAAC,OAAO,EAAExB,IAAI,CAACiC,CAAC,CAAC,CAACR;MAAI,CAAC;MAC3CH,WAAW,CAACa,WAAW,IAAInC,IAAI,CAACiC,CAAC,CAAC,CAACG,MAAK;IAC5C;;IAEA;IACA;;IAEA,OAAO;MACHpC,IAAI;MAAEiB,cAAc;MAAEK;IAC1B;EACJ;AACJ","names":["Search","useRouter","countries","components","data","restaurants","state1","selected","meta","methods","querySearch","queryString","cb","results","filter","createFilter","restaurant","value","toLowerCase","indexOf","loadAll","countryNameArr","handleSelect","item","JSON","stringify","countryInfo","$router","push","name","query","title","metaInfo","console","log","mounted","setup","i","length","countryName","topics"],"sourceRoot":"","sources":["C:\\OneDrive\\Implementation Report Interface\\implementation-tracker-vue\\implementation-tracker\\src\\components\\countrySearchBox.vue"],"sourcesContent":["<template>\r\n<el-autocomplete\r\n        v-model=\"state1\"\r\n        :fetch-suggestions=\"querySearch\"\r\n        clearable\r\n        class=\"search-box\"\r\n        placeholder=\"Select Country\"\r\n        fit-input-width=\"true\"\r\n        :prefix-icon=\"Search\"\r\n        @select=\"handleSelect\"\r\n      >\r\n    \r\n  <template #append>\r\n        <el-button>\r\n          <el-icon><Search /></el-icon>\r\n        </el-button>\r\n    </template>\r\n\r\n  </el-autocomplete>\r\n</template>\r\n\r\n<script>\r\nimport { Search } from '@element-plus/icons-vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nimport countries from '@/data/countries.json'\r\n\r\nexport default {\r\n    components: {Search},\r\n    data() {\r\n      return {\r\n        restaurants: [],\r\n        state1: '',\r\n        selected: '',\r\n        meta: {}\r\n      };\r\n    },\r\n\r\n    methods: {\r\n      querySearch(queryString, cb) {\r\n        var restaurants = this.restaurants;\r\n        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\r\n        // 调用 callback 返回建议列表的数据\r\n        cb(results);\r\n      },\r\n      createFilter(queryString) {\r\n        return (restaurant) => {\r\n        return (restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n        };\r\n      },\r\n\r\n      loadAll() {\r\n        return this.countryNameArr\r\n      },\r\n\r\n      handleSelect(item) {\r\n\r\n        this.selected = item.value;\r\n        this.meta = JSON.stringify(this.countryInfo[this.selected]);\r\n\r\n        //router传值，国家名和附带信息\r\n        this.$router.push({\r\n          name:`country`,\r\n          query: {\r\n            title: `${this.selected}`,\r\n            metaInfo: `${this.meta}`\r\n          }\r\n        })\r\n\r\n        // this.query();\r\n        console.log('选择的国家', this.selected);\r\n        console.log('选择的信息', this.meta)\r\n      }\r\n    },\r\n\r\n    mounted() {\r\n      this.restaurants = this.loadAll();\r\n    },\r\n\r\n    setup() {\r\n      const $router = useRouter();\r\n      console.log($router, 'router');\r\n\r\n      //read in data\r\n        let data = countries.countries;\r\n        let countryNameArr = [];\r\n        let countryInfo = [];\r\n\r\n        // console.log(\"国家数据\", data);\r\n\r\n        for(var i=0; i<data.length; i++){\r\n            var countryName = data[i].name;\r\n\r\n            countryNameArr.push({\"value\": data[i].name})\r\n            countryInfo[countryName] = data[i].topics\r\n        }\r\n\r\n        // console.log(\"国家名称\",countryNameArr);\r\n        // console.log(\"国家信息\", countryInfo);\r\n\r\n        return {\r\n            data, countryNameArr, countryInfo\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.search-box .el-autocomplete{\r\n  width: 300px;\r\n  .el-input-group {\r\n    display: inline;\r\n    width: 120%;\r\n  }\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}