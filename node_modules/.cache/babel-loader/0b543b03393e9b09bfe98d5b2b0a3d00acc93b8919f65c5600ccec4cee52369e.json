{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_autocomplete = _resolveComponent(\"el-autocomplete\");\n  return _openBlock(), _createBlock(_component_el_autocomplete, {\n    modelValue: $data.state1,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.state1 = $event),\n    \"fetch-suggestions\": $options.querySearch,\n    clearable: \"\",\n    class: \"searchBox\",\n    placeholder: \"Search Country\",\n    \"prefix-icon\": _ctx.Search,\n    onSelect: $options.handleSelect\n  }, {\n    append: _withCtx(() => [_createVNode(_component_el_button, {\n      icon: _ctx.Search\n    }, null, 8 /* PROPS */, [\"icon\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"fetch-suggestions\", \"prefix-icon\", \"onSelect\"]);\n}","map":{"version":3,"mappings":";;;;uBACAA,aAaoBC;gBAZHC,YAAM;+DAANA,YAAM;IACd,mBAAiB,EAAEC,oBAAW;IAC/BC,SAAS,EAAT,EAAS;IACTC,KAAK,EAAC,WAAW;IACjBC,WAAW,EAAC,gBAAgB;IAC3B,aAAW,EAAEC,WAAM;IACnBC,QAAM,EAAEL;;IAEJM,MAAM,WACX,MAA4B,CAA5BC,aAA4BC;MAAhBC,IAAI,EAAEL;IAAM","names":["_createBlock","_component_el_autocomplete","$data","$options","clearable","class","placeholder","_ctx","onSelect","append","_createVNode","_component_el_button","icon"],"sourceRoot":"","sources":["C:\\OneDrive\\Implementation Report Interface\\implementation-tracker-vue\\implementation-tracker\\src\\components\\countrySearchBox.vue"],"sourcesContent":["<template>\r\n<el-autocomplete\r\n        v-model=\"state1\"\r\n        :fetch-suggestions=\"querySearch\"\r\n        clearable\r\n        class=\"searchBox\"\r\n        placeholder=\"Search Country\"\r\n        :prefix-icon=\"Search\"\r\n        @select=\"handleSelect\"\r\n      >\r\n  <template #append>\r\n        <el-button :icon=\"Search\" />\r\n      </template>\r\n\r\n  </el-autocomplete>\r\n</template>\r\n\r\n<script>\r\nimport { Search } from '@element-plus/icons-vue';\r\n\r\nexport default {\r\n   \r\n    data() {\r\n      return {\r\n        restaurants: [],\r\n        state1: ''\r\n      };\r\n    },\r\n    components: { Search },\r\n    methods: {\r\n      querySearch(queryString, cb) {\r\n        var restaurants = this.restaurants;\r\n        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\r\n        // 调用 callback 返回建议列表的数据\r\n        cb(results);\r\n      },\r\n      createFilter(queryString) {\r\n        return (restaurant) => {\r\n          return (restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\r\n        };\r\n      },\r\n      loadAll() {\r\n        return [\r\n          {\"value\": \"Russia\"},\r\n          {\"value\": \"Ukraine\"}\r\n        ];\r\n      },\r\n      handleSelect(item) {\r\n        console.log(item);\r\n      }\r\n    },\r\n    mounted() {\r\n      this.restaurants = this.loadAll();\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.el-autocomplete--searchBox {\r\n  width: 500px;\r\n  display: inline-flex;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}