{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5e0e50f0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Filter Topics\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache) {\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\");\n  const _component_el_checkbox_group = _resolveComponent(\"el-checkbox-group\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createVNode(_component_el_checkbox, {\n    modelValue: _ctx.checkAll,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.checkAll = $event),\n    indeterminate: _ctx.isIndeterminate,\n    onChange: _ctx.handleCheckAllChange\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Check all\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"indeterminate\", \"onChange\"]), _createVNode(_component_el_checkbox_group, {\n    modelValue: _ctx.checkedOptions,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.checkedOptions = $event),\n    onChange: _ctx.handleCheckedOptionsChange\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.options, option => {\n      return _openBlock(), _createBlock(_component_el_checkbox, {\n        key: option,\n        label: option\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(option), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"label\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"onChange\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gEACAA,oBAAsB,YAAlB,eAAa;;;;;6DAAjBC,UAAsB,EAEtBC,aAKCC;gBAJYC,aAAQ;+DAARA,aAAQ;IAChBC,aAAa,EAAED,oBAAe;IAC9BE,QAAM,EAAEF;;sBACR,MAAS,kBAAT,WAAS;;kEAGdF,aAaoBK;gBAZPH,mBAAc;+DAAdA,mBAAc;IACtBE,QAAM,EAAEF;;sBAIT,MAAyB,oBAD7BI,oBAMcC,6BALOL,YAAO,EAAjBM,MAAM;2BADjBC,aAMcR;QAJTS,GAAG,EAAEF,MAAM;QACXG,KAAK,EAAEH;;0BAER,MAAU,mCAARA,MAAM","names":["_createElementVNode","_hoisted_1","_createVNode","_component_el_checkbox","_ctx","indeterminate","onChange","_component_el_checkbox_group","_createElementBlock","_Fragment","option","_createBlock","key","label"],"sourceRoot":"","sources":["C:\\OneDrive\\Implementation Report Interface\\implementation-tracker-vue\\implementation-tracker\\src\\components\\asideFilter.vue"],"sourcesContent":["<template>\r\n<h3>Filter Topics</h3>\r\n\r\n<el-checkbox\r\n    v-model=\"checkAll\"\r\n    :indeterminate=\"isIndeterminate\"\r\n    @change=\"handleCheckAllChange\"\r\n    >Check all</el-checkbox\r\n>\r\n\r\n<el-checkbox-group\r\n    v-model=\"checkedOptions\"\r\n    @change=\"handleCheckedOptionsChange\"\r\n>\r\n\r\n<el-checkbox \r\n    v-for=\"option in options\" \r\n    :key=\"option\" \r\n    :label=\"option\"\r\n>\r\n    {{option}}\r\n</el-checkbox>\r\n\r\n</el-checkbox-group>\r\n\r\n</template>\r\n\r\n<script>\r\n  // const cityOptions = ['1990', '1991', '1992', '1993'];\r\n  let loopOptions = ['1', '2', '3']\r\n\r\n  export default {\r\n    props: {\r\n      allOptions: Array\r\n    }\r\n\r\n    data() {\r\n      return {\r\n        checkAll: false,\r\n        checkedOptions: [],\r\n        options: this.allOptions, //应该从父组件中v-for得到 先定为loopOptions\r\n        // checkedCities: ['1991', '1992'],\r\n        // cities: cityOptions,\r\n        isIndeterminate: true,\r\n\r\n        //filter list\r\n        dataListDisplayed: this.agreementList\r\n      };\r\n    },\r\n\r\n    methods: {\r\n      handleCheckAllChange(val) {\r\n        this.checkedOptions = val ? this.topicOptions : [];\r\n        this.isIndeterminate = false;\r\n        console.log()\r\n\r\n      },\r\n\r\n      handleCheckedOptionsChange(value) {\r\n        let checkedCount = value.length;\r\n        this.checkAll = checkedCount === this.options.length;\r\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.options.length;\r\n\r\n        //generate filter list\r\n        let tmpArr = [];\r\n            for (let topic of this.checkedOptions) {\r\n            for (let agtObj of this.agreementList) {\r\n                if ( agtObj.topics.includes(topic) && !tmpArr.includes(agtObj)){\r\n                tmpArr.push(agtObj)\r\n                }\r\n            }\r\n            }\r\n            this.dataListDisplayed = tmpArr\r\n      },\r\n\r\n    },\r\n    setup() {\r\n     \r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\nh3 {\r\n    font-size: 16px;\r\n    text-align: left;\r\n    padding-top: 20px;\r\n    margin-left: 60px;\r\n    margin-bottom: 0px;\r\n}\r\n\r\n.el-checkbox-group {\r\n    text-align: left;\r\n}\r\n\r\n.el-checkbox {\r\n    display: block; \r\n    padding-top: 20px;\r\n    margin-left: 60px;\r\n    margin-right: 25px;\r\n    width: 240px;\r\n    padding-left: 0px;\r\n    text-align: left;\r\n}\r\n\r\n.el-divider--vertical{\r\n  display:inline-block;\r\n  width:1px;\r\n  height:20em;\r\n  margin:0 8px;\r\n  vertical-align:middle;\r\n  position:relative;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}