{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { onMounted, watch } from 'vue'\nimport { useRoute } from 'vue-router';\n\n// 导入组件\nimport trackerHeader from '@/components/trackerHeader.vue';\nimport trackerFooter from '@/components/trackerFooter.vue';\nimport asideFilter from '@/components/asideFilter.vue';\n// import docList from '@/components/docList.vue'\n\n// 导入数据\nimport countries from '@/data/countries.json';\nexport default {\n  components: {\n    trackerHeader,\n    trackerFooter,\n    asideFilter\n  },\n  data() {\n    return {\n      title: this.countryName,\n      checkAll: false,\n      checkedTopics: this.topicOptions,\n      topics: this.topicOptions,\n      isIndeterminate: true,\n      //filter list\n      allAgt: this.agreementList,\n      dataListDisplayed: this.agreementList,\n      //父组件重写数据\n      allOptions: this.topicOptions\n    };\n  },\n  methods: {\n    handleCheckAllChange(val) {\n      this.checkedTopics = val ? this.topicOptions : [];\n      this.isIndeterminate = false;\n    },\n    handleCheckedtopicsChange(value) {\n      let checkedCount = value.length;\n      this.checkAll = checkedCount === this.topics.length;\n      this.isIndeterminate = checkedCount > 0 && checkedCount < this.topics.length;\n      console.log(this.checkedTopics, \"CHECKED\");\n      //checkedTopics 选中的话题\n\n      //generate filter list\n      let tmpArr = [];\n      for (let topic of this.checkedTopics) {\n        for (let agtObj of this.agreementList) {\n          if (agtObj.topics.includes(topic) && !tmpArr.includes(agtObj)) {\n            tmpArr.push(agtObj);\n          }\n        }\n      }\n      this.dataListDisplayed = tmpArr;\n    },\n    changeDisplayList(newList) {\n      this.dataListDisplayed = newList;\n    }\n  },\n  setup() {\n    //pass in country title through route\n    const $route = useRoute();\n    let countryName = $route.query.title;\n    let data = {};\n    let agreementList = [];\n\n    //初始化本页需要的数据\n    for (let country of countries.countries) {\n      console.log(country.name, \"log country\");\n      if (country.name == countryName) {\n        data = country;\n      }\n    }\n\n    //得到所有agreement\n    let topic = '';\n    let topicOptions = [];\n    let agtName = '';\n    // let agtTimeExact = ''\n\n    let agtList = [];\n    for (let [j, item] of data.topics.entries()) {\n      topic = item.text;\n      topicOptions.push(topic);\n      console.log('话题', j, topic);\n      for (let [i, agt] of item.agreements.entries()) {\n        agtName = agt.name;\n        let topicTagList = [];\n        let agtTime = '';\n        console.log(i);\n\n        //得到文件名后，判断agtList里是否已经有这个文件\n        if (agtList.includes(agtName) == false) {\n          agtList.push(agtName);\n\n          //对这个文件添加话题表\n          topicTagList.push(topic);\n\n          //对这个文件找到时间\n\n          //得到时间\n          let tmp = agt.date.toString();\n          let YEAR = tmp.slice(0, 4);\n          let MONTH = tmp.slice(4, 6);\n          let DAY = tmp.slice(6, 8);\n\n          // console.log(YEAR, MONTH, DAY, '时间转换')\n          agtTime = YEAR + '-' + MONTH + '-' + DAY;\n          // agtTimeExact = new Date (agtTime)\n          // console.log(agtTimeExact, 'TIME')\n\n          agreementList.push({\n            'agt': agtName,\n            'date': agtTime,\n            \"topics\": topicTagList\n          });\n        }\n      }\n\n      // console.log('列表', agreementList)\n    }\n\n    return {\n      countryName,\n      data,\n      agreementList,\n      topicOptions\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["useRoute","trackerHeader","trackerFooter","asideFilter","countries","components","data","title","countryName","checkAll","checkedTopics","topicOptions","topics","isIndeterminate","allAgt","agreementList","dataListDisplayed","allOptions","methods","handleCheckAllChange","val","handleCheckedtopicsChange","value","checkedCount","length","console","log","tmpArr","topic","agtObj","includes","push","changeDisplayList","newList","setup","$route","query","country","name","agtName","agtList","j","item","entries","text","i","agt","agreements","topicTagList","agtTime","tmp","date","toString","YEAR","slice","MONTH","DAY"],"sourceRoot":"","sources":["C:\\OneDrive\\Implementation Report Interface\\implementation-tracker-vue\\implementation-tracker\\src\\views\\CountryView.vue"],"sourcesContent":["<template>\r\n  <trackerHeader />\r\n\r\n  <div class=\"country-layout\">\r\n    <el-container>\r\n\r\n        <el-header>\r\n            <div class=\"country\">\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :span=\"12\"><h1> {{ title }} </h1></el-col>\r\n                </el-row>\r\n\r\n                <el-row :gutter=\"20\">\r\n                    <el-col :span=\"4\"><p>Agreements</p></el-col>\r\n                    <!-- <el-col :span=\"8\"><p>Implementation reports</p></el-col> -->\r\n                </el-row>\r\n            </div>\r\n        </el-header>\r\n\r\n      <el-container>\r\n        <el-aside width=\"500px\">\r\n            <div>\r\n            <asideFilter \r\n                :allOptions=\"allOptions\"\r\n                :allAgt=\"allAgt\" />\r\n            </div>\r\n\r\n            <h3>Filter Topics</h3>\r\n\r\n            <el-checkbox\r\n                v-model=\"checkAll\"\r\n                :indeterminate=\"isIndeterminate\"\r\n                @change=\"handleCheckAllChange\"\r\n                >Check all</el-checkbox\r\n            >\r\n\r\n            <el-checkbox-group\r\n                v-model=\"checkedTopics\"\r\n                @change=\"handleCheckedtopicsChange\"\r\n            >\r\n\r\n            <el-checkbox \r\n                v-for=\"topic in topics\" \r\n                :key=\"topic\" \r\n                :label=\"topic\"\r\n            >\r\n                {{topic}}\r\n            </el-checkbox>\r\n\r\n            </el-checkbox-group>\r\n        \r\n        </el-aside>\r\n\r\n        <el-divider direction=\"vertical\"></el-divider>\r\n\r\n        <el-main>\r\n            <!-- <docList /> -->\r\n\r\n            <div class='doc-list' v-for='agreement in dataListDisplayed' :key='agreement'>\r\n                <h3>{{ agreement.agt}}</h3>\r\n                <span>{{ agreement.date}}</span>\r\n            </div>\r\n\r\n        </el-main>\r\n\r\n      </el-container>\r\n    </el-container>\r\n  </div>\r\n\r\n  <trackerFooter />\r\n</template>\r\n\r\n<script>\r\n// import { onMounted, watch } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\n\r\n// 导入组件\r\nimport trackerHeader from '@/components/trackerHeader.vue'\r\nimport trackerFooter from '@/components/trackerFooter.vue'\r\nimport asideFilter from '@/components/asideFilter.vue'\r\n// import docList from '@/components/docList.vue'\r\n\r\n// 导入数据\r\nimport countries from '@/data/countries.json'\r\n\r\nexport default ({\r\n    components: {\r\n        trackerHeader, trackerFooter, asideFilter\r\n    },\r\n\r\n    data() {\r\n        return{\r\n        title: this.countryName,\r\n\r\n        checkAll: false,\r\n        checkedTopics: this.topicOptions,\r\n        topics: this.topicOptions,\r\n        isIndeterminate: true,\r\n\r\n        //filter list\r\n        allAgt: this.agreementList,\r\n        dataListDisplayed: this.agreementList,\r\n\r\n        //父组件重写数据\r\n        allOptions: this.topicOptions\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        handleCheckAllChange(val) {\r\n        this.checkedTopics = val ? this.topicOptions : [];\r\n        this.isIndeterminate = false;\r\n      },\r\n\r\n\r\n        handleCheckedtopicsChange(value) {\r\n            let checkedCount = value.length;\r\n            this.checkAll = checkedCount === this.topics.length;\r\n            this.isIndeterminate = checkedCount > 0 && checkedCount < this.topics.length;\r\n            console.log(this.checkedTopics, \"CHECKED\");\r\n            //checkedTopics 选中的话题\r\n\r\n            //generate filter list\r\n            let tmpArr = [];\r\n            for (let topic of this.checkedTopics) {\r\n            for (let agtObj of this.agreementList) {\r\n                if ( agtObj.topics.includes(topic) && !tmpArr.includes(agtObj)){\r\n                tmpArr.push(agtObj)\r\n                }\r\n            }\r\n            }\r\n            this.dataListDisplayed = tmpArr\r\n        },\r\n\r\n        changeDisplayList(newList) {\r\n            this.dataListDisplayed = newList\r\n        }\r\n\r\n\r\n    },\r\n\r\n    setup() {\r\n        //pass in country title through route\r\n        const $route = useRoute()\r\n        let countryName = $route.query.title\r\n        let data = {}\r\n\r\n        let agreementList = []\r\n\r\n        //初始化本页需要的数据\r\n        for (let country of countries.countries) {\r\n            console.log(country.name, \"log country\")\r\n            if (country.name == countryName) {\r\n                data = country\r\n            }\r\n        }\r\n\r\n        //得到所有agreement\r\n        let topic = ''\r\n        let topicOptions = []\r\n        let agtName = ''\r\n        // let agtTimeExact = ''\r\n\r\n        let agtList = []\r\n\r\n        for (let [j, item] of data.topics.entries()) {\r\n                topic = item.text\r\n                topicOptions.push(topic)\r\n                console.log('话题', j, topic)\r\n\r\n                for (let [i, agt] of item.agreements.entries()){\r\n                    agtName = agt.name\r\n                    let topicTagList = []\r\n                    let agtTime = ''\r\n                    console.log(i)\r\n                    \r\n                    //得到文件名后，判断agtList里是否已经有这个文件\r\n                    if (agtList.includes(agtName) == false){\r\n                        agtList.push(agtName)\r\n\r\n                        //对这个文件添加话题表\r\n                        topicTagList.push(topic)\r\n\r\n                        //对这个文件找到时间\r\n\r\n                        //得到时间\r\n                        let tmp = agt.date.toString()\r\n                        let YEAR = tmp.slice(0,4)\r\n                        let MONTH = tmp.slice(4,6)\r\n                        let DAY = tmp.slice(6,8)\r\n\r\n                        // console.log(YEAR, MONTH, DAY, '时间转换')\r\n                        agtTime = YEAR + '-' + MONTH + '-' + DAY\r\n                        // agtTimeExact = new Date (agtTime)\r\n                        // console.log(agtTimeExact, 'TIME')\r\n\r\n                        agreementList.push({'agt': agtName,'date': agtTime, \"topics\": topicTagList})\r\n                    }\r\n\r\n                }\r\n\r\n                // console.log('列表', agreementList)\r\n            }\r\n            \r\n        return {\r\n            countryName, data, agreementList, topicOptions\r\n        }\r\n    }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.country-layout .el-header {\r\n  background-color: #D9D9D9;\r\n  padding: 10px 20px;\r\n  height: auto;\r\n}\r\n\r\n.country-layout .el-main {\r\n    padding-left: 40px;\r\n    background-color: white;\r\n    display: block;\r\n    text-align: left;\r\n  \r\n}\r\n\r\n.country-layout .el-aside {\r\n  background-color: white;\r\n}\r\n\r\n.country {\r\n    padding-top: 80px;\r\n    padding-left: 100px;\r\n    padding-bottom: 30px;\r\n}\r\n\r\n\r\n.el-row {\r\n    margin-left: 50px;\r\n    margin-bottom: 10px;\r\n    align-items: flex-start;\r\n}\r\n\r\n.el-col {\r\n    column-rule: 4px dotted rgb(79, 185, 227);\r\n    border-radius: 4px;\r\n    align-items: flex-start;\r\n  \r\n}\r\n\r\n.el-divider--vertical{\r\n  display:inline-block;\r\n  width:1px;\r\n  height:20em;\r\n  margin:0 8px;\r\n  vertical-align:middle;\r\n  position:relative;\r\n}\r\n\r\n.el-checkbox-group {\r\n  text-align: left;\r\n}\r\n \r\n \r\n.el-checkbox {\r\n  margin-left: 40px;\r\n  width: 350px; \r\n  padding-left: 0px;\r\n  text-align: left; \r\n  margin-bottom: 10px;\r\n}\r\n\r\n.el-checkbox__label {\r\n  display: inline;\r\n  font-size: 12px;\r\n}\r\n\r\n.el-checkbox, .el-checkbox__input {\r\n  white-space: normal;\r\n}\r\n\r\n.el-checkbox__original {\r\n    font-size: 12px;\r\n}\r\n\r\n\r\n\r\nh1 {\r\n    color: #000;\r\n    font-size: 48px;\r\n    text-align: left;\r\n    margin: 0px;\r\n}\r\n\r\np {\r\n    color: #000;\r\n    font-size: 24px;\r\n    font-weight: blod;\r\n    text-align: left;\r\n    margin: 0px;\r\n}\r\n\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}