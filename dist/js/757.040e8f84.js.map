{"version":3,"file":"js/757.040e8f84.js","mappings":"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","sources":["webpack://implementation-tracker/./src/components/docDrawerTopic.vue","webpack://implementation-tracker/./src/components/docDrawerTopic.vue?5656","webpack://implementation-tracker/./src/components/reportDrawerTopic.vue","webpack://implementation-tracker/./src/components/reportDrawerTopic.vue?3a01","webpack://implementation-tracker/./src/views/subCategoryView.vue","webpack://implementation-tracker/./src/views/subCategoryView.vue?490a"],"sourcesContent":["<template>\n    <div class=\"inner-drawer\">\n    <h1>{{ title }}</h1>\n    <div id=\"doc\" v-html=\"document\"></div>\n    </div>\n</template>\n\n<script>\nvar tmp_id = -1;\n\nexport default ({\n    props: [\"id\", \"docDrawerOpen\", \"country\", \"agtId\", \"agtName\"],\n\n    data() {\n        return {\n            agt: '',\n            title: '',\n            document,\n        }\n    },\n\n    methods: {\n        loadDocument() {\n            this.agt = this.agtId;\n            this.title = this.agtName;\n\n            let countryName = this.country;\n            let countryFolderName = countryName.replace(/\\s+/g, \"_\").toLowerCase();\n\n            let xhr = new XMLHttpRequest();\n            const url = './docsHtml/'+countryFolderName+'/agreements/'+this.agt+\".html\";\n            // console.log(\"docDrawer\", url);\n            xhr.open(\"GET\", url, false);\n            xhr.setRequestHeader('Content-type', 'text/html');\n            xhr.send();\n            this.document = xhr.response;\n        },\n\n        do_highlight(id) {\n            // console.log(\"do highlight triggered\")\n            tmp_id = id\n            let highlightQuerry = \"div[id='doc'] a[id='\" + tmp_id + \"']\"\n            let selected = document.querySelector(`${highlightQuerry}`)\n            selected.style.background = \"yellow\";\n            // console.log(\"do highllight\", selected)\n        },\n\n        clear_highlight() {\n            if (tmp_id > -1) {\n                let clearQuerry = \"div[id='doc'] a[id='\" + tmp_id + \"']\"\n                document.querySelector(`${clearQuerry}`).style.background = \"white\";\n                tmp_id = -1\n            }\n        },\n\n        force_scrolling(id) {\n            setTimeout(function () {\n                let scrollQuerry = \"div[id='doc'] a[id='\" + id + \"']\"\n                let provisionElement = document.querySelector(`${scrollQuerry}`)\n                provisionElement.scrollIntoView({behavior: \"smooth\", block: \"center\", inline: \"nearest\"})\n            }, 300)\n        }\n    },\n\n    created() {\n        this.loadDocument()\n    },\n\n    mounted() {\n        this.do_highlight(this.id)\n        this.force_scrolling(this.id)\n    },\n\n    watch: {\n        'docDrawerOpen': function() {\n            if ( this.docDrawerOpen ==  true) {\n                this.loadDocument()\n\n                this.$nextTick(() => {\n                    this.clear_highlight()\n                    // console.log(\"data changed\")\n                    this.do_highlight(this.id)\n                    this.force_scrolling(this.id)\n                })\n            }\n        }\n    }\n})\n</script>","import { render } from \"./docDrawerTopic.vue?vue&type=template&id=dc76ccda\"\nimport script from \"./docDrawerTopic.vue?vue&type=script&lang=js\"\nexport * from \"./docDrawerTopic.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/jrwang/Desktop/implementation-narratives-tracker/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"report-head\">\n        <h2>{{ this.report.name }}</h2>\n        <div class=\"switch-container\">\n            <p>{{ this.allIDs.length }} segments highlighted  </p>\n        <el-button-group v-show=\"nextLineVisible\" class=\"button-wrapper\">\n            <el-button @click=\"force_scrolling(-1)\"><el-icon><ArrowLeft /></el-icon>Previous</el-button>\n            <el-button @click=\"force_scrolling(1)\">Next<el-icon><ArrowRight /></el-icon></el-button>\n        </el-button-group>\n        </div>\n    </div>\n\n    <div class=\"inner-drawer\">\n        <div id=\"repo\" v-html=\"reportText\"></div>\n    </div>\n</template>\n\n<script>\nimport { ArrowLeft } from '@element-plus/icons-vue';\nlet i = 0\n\nexport default ({\n    props: [\"report\", \"allIDs\", \"reportDrawerOpen\", \"country\"],\n    components: { ArrowLeft },\n    data() {\n        return {\n            tmpArr: [],\n            currentIndex: 0,\n            nextLineVisible: false,\n            folderName:'',\n            sortedIDs: []\n        };\n    },\n    methods: {\n        do_highlight(idList) {\n            this.tmpArr = idList;\n            for (let id of idList) {\n                let highlightQuerry = \"div[id='repo'] a[id='\" + id + \"']\"\n                let selected = document.querySelector(`${highlightQuerry}`)\n                selected.style.background = \"yellow\";\n            }\n        },\n\n        force_scrolling(dif) {\n            let segNum = this.allIDs.length\n            let arr = []\n            let item = JSON.parse(JSON.stringify(this.allIDs))\n            for ( let id of item ) {\n                id = parseInt(id)\n                arr.push(id)\n            }\n            arr.sort(function(a, b){return a - b})\n\n            if ( i >= -1 && i < segNum-1) {\n                i = i + dif\n                if ( dif == -1 ) {\n                    i = 0\n                    this.$message('back to the top.')\n                }\n            }\n            else {\n                i = 0\n                this.$message('back to the top.')\n            }\n            let scrollToId = arr[i]\n            let scrollQuerry = \"div[id='repo'] a[id='\" + scrollToId + \"']\"\n            let element = document.querySelector(`${scrollQuerry}`);\n            element.scrollIntoView({ behavior: \"smooth\", block: \"center\", inline: \"nearest\" });\n        },\n\n        show(idList) {\n            if (idList.length > 1) {\n                this.nextLineVisible = true\n            }\n            else {\n                this.nextLineVisible = false\n            } \n        },\n        \n        getReport() {\n            // Synchronous request\n            let xhr = new XMLHttpRequest();\n            const url = \"./docsHtml/\" + this.folderName + \"/reports/\" + this.report.id + \".html\";\n            // console.log(this.report.id)\n            xhr.open(\"GET\", url, false);\n            xhr.setRequestHeader(\"Content-type\", \"text/html\");\n            xhr.send();\n            this.reportText = xhr.response;\n        },\n\n        defaultScroll() {\n            let arr = []\n            let item = JSON.parse(JSON.stringify(this.allIDs))\n            for ( let id of item ) {\n                id = parseInt(id)\n                arr.push(id)\n            }\n            arr.sort(function(a, b){return a - b})\n            this.sortedIDs = arr\n            let id = this.sortedIDs[0]\n\n            let querryID = \"div[id='repo'] a[id='\" + id + \"']\"\n            let element = document.querySelector(`${querryID}`)\n            setTimeout(function() {\n                element.scrollIntoView({ behavior: \"auto\", block: \"center\", inline: \"nearest\" })\n            }, 100)\n            \n        }\n    },\n\n    created() {\n        let countryName = this.country\n        let countryFolderName = countryName.replace(/\\s+/g, \"_\").toLowerCase()\n        this.folderName = countryFolderName\n        this.getReport()\n        this.show(this.allIDs)\n    },\n\n    mounted() {\n        const that = this\n        setTimeout(function() {\n            that.do_highlight(that.allIDs)\n            that.defaultScroll()\n        }, 100)\n    },\n\n    watch: {\n        \"reportDrawerOpen\": function () {\n            if (this.reportDrawerOpen == true) {\n                this.getReport()\n                this.show(this.allIDs)\n                i = 0\n                const that = this\n                setTimeout(function() {\n                    that.do_highlight(that.allIDs);\n                    that.defaultScroll()\n                }, 50)\n            }\n        }\n    }\n})\n\n</script>\n\n<style scoped>\n.el-drawer__body {\n    padding: 0px;\n}\n\n</style>","import { render } from \"./reportDrawerTopic.vue?vue&type=template&id=256faaff&scoped=true\"\nimport script from \"./reportDrawerTopic.vue?vue&type=script&lang=js\"\nexport * from \"./reportDrawerTopic.vue?vue&type=script&lang=js\"\n\nimport \"./reportDrawerTopic.vue?vue&type=style&index=0&id=256faaff&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jrwang/Desktop/implementation-narratives-tracker/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-256faaff\"]])\n\nexport default __exports__","<template>\n    <tracker-header />\n\n    <div class=\"agt-head\">\n        <div class=\"breadcrumb\">\n            <el-link class=\"country-title\" @click=\"home\">Home</el-link>\n            <el-icon><CaretRight /></el-icon>\n            <el-link id=\"drawer\" class=\"country-title\" @click=\"toCountryView(this.countryName)\">{{ this.countryName }} Topics</el-link>\n            <el-icon><CaretRight /></el-icon>\n            <el-link class=\"country-title current-page\">{{ this.topicCategory }}</el-link>\n            <el-icon><CaretRight /></el-icon>\n            <el-link class=\"country-title current-page\">{{ this.subCategory }}</el-link>\n        </div>\n\n        <h1>{{ this.subCategory }}</h1>\n        <p>Click agreement to explore implementation.</p>\n    </div>\n\n\n    <div class=\"tracker\">\n        <!-- agreement loop -->\n        <div class=\"section-wrapper\"\n            v-for=\"agt in sortedAgreements\"\n            :key=\"agt.id\">\n            <div @click=\"toggleAgreement(agt)\" class=\"agreement-container\">\n                <div class=\"date-column\">\n                    <p class=\"date-column-ddmm\">{{ formatDate(agt.date).dayMonth }}</p>\n                    <p class=\"date-column-yyyy\">{{ formatDate(agt.date).year }}</p>\n                </div>\n                <div class=\"info-column\">\n                    <h2 class=\"agt-in-topic\">{{ agt.name }}</h2>\n                    <p>{{ getPaxData(agt.id).agtDescription }}</p>\n                </div>\n            </div>\n\n            \n            <div v-if=\"selectedAgreementId === agt.id\" class=\"provision-container\">\n                <el-divider></el-divider>\n                <el-row justify=\"center\" :gutter=\"15\" class=\"section-wrapper\">\n                    <el-col :span=\"12\">\n                        <h3>Agreement Provisions</h3>\n                        <p class=\"counters\" style=\"font-style: italic;\">Click provision to view/fold</p>\n                        </el-col>\n                    <el-col :span=\"12\">\n                        <h3>Implementation Instances</h3>\n                        <p class=\"counters\" style=\"font-style: italic;\">Since agreement signed</p>\n                    </el-col>\n                </el-row>\n\n                <div class=\"provision\" v-for=\"(provision, index) in agt.provisions\" :key=\"provision\">\n                    <el-row justify=\"center\" :gutter=\"15\" class=\"section-wrapper\">\n                    <el-col :span=\"12\">\n                        <!-- <h3>Provisions</h3> -->\n                        <div class=\"text-container\">\n                            <p class=\"agt-extracts-topic\"\n                                :class=\"{changeStyle:changeStyleIndex == index}\"\n                                @click=\"toggleProvision(provision.number, provision.reports)\">\n                                ...{{ provision.text }}...\n                            </p>\n                            <div v-for=\"(topic, index) in provision.topicTexts\" :key=\"index\" class=\"topic-container\">\n                                <p>{{ topic }}</p>\n                            </div>\n                            <!-- <el-button \n                                round size=\"small\"\n                                v-if=\"selectedProvisionNumber === provision.number\"\n                                @click=\"openDrawer(provision.number, selectedAgreementId, agt.name)\">\n                                Locate in Agreement\n                            </el-button> -->\n                        </div>\n                    </el-col>\n\n                    <el-col :span=\"12\" style=\"padding: 20px 0px;\">\n                        <div id=\"if-empty\"></div>\n                        <!-- <h3>Reports</h3> -->\n                        <el-scrollbar max-height=\"80vh\" v-if=\"selectedProvisionNumber === provision.number\">\n                            \n                            <el-timeline class=\"timeline\">\n                                <el-timeline-item\n                                    v-for=\"report in provision.reports\"\n                                    :key=\"report\"\n                                    :timestamp=\"computeTimeDif(report.date, agt.date)\"\n                                    placement=\"top\">\n                                    <el-card>\n                                        <h3>{{ report.name }}</h3>\n                                        <div class=\"source-wrapper\">\n                                            <p class=\"repo-source\">Source: {{ report.organisation }}</p>\n                                            <el-button \n                                                round size=\"small\" style=\"margin-left: 10px;\"\n                                                @click=\"openReportDrawer(report.id, report)\">\n                                                Open Full Report\n                                            </el-button>\n                                        </div>\n                                        <div\n                                            v-for=\"segment in report.segments\"\n                                            :key=\"segment\"\n                                            class=\"segment-container\"\n                                            >\n                                            <div>\n                                            <el-row class=\"segment-wrapper\">\n                                                <el-col :span=\"22\">\n                                                    <p class=\"segment-text\">{{ segment.text }}</p>\n                                                </el-col>\n                                                <el-col :span=\"2\">\n                                                    <div v-if=\"segment.polarity > 0\">\n                                                    <el-tag effect=\"plain\" type=\"success\" size=\"small\" round>\n                                                    positive\n                                                    </el-tag></div>\n                                                <div v-else-if=\"segment.polarity < 0\">\n                                                    <el-tag effect=\"plain\" type=\"danger\" size=\"small\" round>\n                                                    negative\n                                                    </el-tag></div>\n                                                <div v-else>\n                                                    <el-tag effect=\"plain\" type=\"info\" size=\"small\" round>\n                                                    neutral\n                                                    </el-tag></div>\n                                                </el-col>\n                                            </el-row>\n                                            </div>\n                                        </div>\n                                    </el-card>\n                                </el-timeline-item>\n                            </el-timeline>\n                        </el-scrollbar>\n                    </el-col>\n                    </el-row>\n                </div>\n            </div>\n        </div>\n    </div>\n\n     <!-- Agreement Full Text -->\n     <el-drawer\n    v-model=\"docDrawerOpen\"\n    :direction=\"direction\"\n    title=\"Agreement full text\"\n    size=\"45%\"\n    >\n        <docDrawerTopic ref=\"docDrawer\" :agtId=\"this.selectedAgreementId\" :agtName=\"this.clickedAgt\" :id=\"this.segement_id\" :docDrawerOpen=\"docDrawerOpen\" :country=\"this.countryName\"/>\n    </el-drawer>\n\n    <!-- Report Full Text -->\n    <el-drawer\n        v-model=\"reportDrawerOpen\"\n        title=\"Report full text\"\n        size=\"45%\"\n        >\n        <reportDrawerTopic :report=\"this.selectedReport\" :reportDrawerOpen=\"reportDrawerOpen\" :allIDs=\"allIDs\" :country=\"this.countryName\" />\n    </el-drawer>\n\n    <trackerFooter />\n\n</template>\n\n<script>\nimport { useRoute } from 'vue-router'\n\nimport trackerHeader from '@/components/trackerHeader.vue'\nimport trackerFooter from '@/components/trackerFooter.vue'\nimport docDrawerTopic from '@/components/docDrawerTopic.vue'\nimport reportDrawerTopic from '@/components/reportDrawerTopic.vue'\n\nimport countries from '@/data/countries.json'\nimport PAX from '@/data/agt_description_links.json'\n\n\nexport default {\n    components: { trackerHeader, trackerFooter, docDrawerTopic, reportDrawerTopic },\n\n    data() {\n        return {\n            changeStyleIndex: '',\n            provisionClicked: '',\n            displayed: [],\n            reportDate: \"\",\n            reportCounter: 0,\n\n            selectedAgreementId: null,\n            selectedProvisionNumber: null,\n            hoveredReportID: null,\n\n            //for the drawer\n            buttonVisible: 0,\n            docDrawerOpen: false,\n            doc_id: 0,\n            segement_id: 0,\n            direction: 'ltr',\n            agt_id: 0,\n            clickedAgt: \"\",\n\n            //for the report drawer\n            reportbuttonVisible: 999,\n            reportDrawerOpen: false,\n            selectedReport: [],\n            allIDs: []\n        }\n    },\n\n    methods: {\n        home(){\n            this.$router.push('/');\n        },\n\n        toCountryView(country) {\n            this.$router.push({\n                name: `country`,\n                query: {\n                    title: `${country}`\n                }\n            })\n        },\n\n        changeStyle(index){\n            this.changeStyleIndex = index\n        },\n\n        toggleAgreement(agt) {\n            if (this.selectedAgreementId === agt.id) {\n                this.selectedAgreementId = null; // fold the currently open agreement\n            } else {\n                this.selectedAgreementId = agt.id; \n            }\n        },\n\n        toggleProvision(provisionNumber, provisionReports) {\n            let reportCounter = provisionReports.length\n            if (this.selectedProvisionNumber === provisionNumber) {\n                this.selectedProvisionNumber = null;\n            } else {\n                this.selectedProvisionNumber = provisionNumber;\n                // console.log(\"click\", provisionNumber)\n                const emptyDiv = document.querySelector(\"#if-empty\")\n                if (reportCounter == 0) {\n                    emptyDiv.innerHTML = '<p>We found no instances of implementation found for this provision topic.</p>';\n                }\n                else {\n                    emptyDiv.innerHTML = ''\n                }\n            }\n        },\n\n        formatDate(dateInt) {\n            const dateStr = String(dateInt);\n            const year = dateStr.substring(0, 4);\n            const month = parseInt(dateStr.substring(4, 6), 10) - 1; \n            const day = dateStr.substring(6, 8);\n\n            const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n            const monthName = monthNames[month];\n\n            return {\n                dayMonth: `${day} ${monthName}`,\n                year: year\n            };\n        },\n\n        getPaxData(agtID) {\n            let paxLink = '';\n            let agtDescription = '';\n\n            for (let item of PAX) {\n                if (agtID == item.agreementID) {\n                    paxLink = item.hyperlink_pax;\n                    agtDescription = item.description;\n                    break;\n                }\n            }\n\n            return {\n                paxLink: paxLink,\n                agtDescription: agtDescription\n            };\n        },\n\n        computeTimeDif(reportDateInt, agtDateInt) {\n            const convertToDate = (dateInt) => {\n                const dateStr = String(dateInt);\n                const year = dateStr.substring(0, 4);\n                const month = dateStr.substring(4, 6) - 1;\n                const day = dateStr.substring(6, 8);\n                return new Date(year, month, day);\n            };\n\n            const repoDate = convertToDate(reportDateInt);\n            const agtDate = convertToDate(agtDateInt);\n\n            const monthDiff = repoDate.getMonth() - agtDate.getMonth();\n            const yearDiff = repoDate.getFullYear() - agtDate.getFullYear();\n            const difference = monthDiff + yearDiff * 12;\n\n            let timeDif, month, year = '';\n            let yearNum, monthNum = 0;\n\n            yearNum = Math.floor(difference / 12);\n            year = yearNum === 1 ? yearNum + ' year ' : yearNum + ' years ';\n\n            monthNum = difference - yearNum * 12;\n            month = monthNum === 1 ? monthNum + ' month ' : monthNum === 0 ? '' : monthNum + ' months ';\n\n            if (difference >= 12) {\n                timeDif = year + month + 'after agreement';\n            } else if (difference > 0 && difference < 12) {\n                timeDif = month + 'after agreement';\n            } else {\n                const dayDiff = repoDate.getDate() - agtDate.getDate();\n                timeDif = dayDiff + ' days after agreement';\n            }\n\n            const formattedRepoDate = `${repoDate.getFullYear()}-${String(repoDate.getMonth() + 1).padStart(2, '0')}-${String(repoDate.getDate()).padStart(2, '0')}`;\n            const timeDisplay = formattedRepoDate + ' | ' + timeDif;\n\n            return timeDisplay;\n        },\n\n        openDrawer(id, agtid, agtname ) {\n            this.docDrawerOpen = true,\n            this.segement_id = id,\n            this.agt_id = agtid\n            this.clickedAgt = agtname\n            // console.log(\"open drawer\", id, agtid, agtname)\n        },\n\n        openReportDrawer(reportId, reportData) {\n            this.reportDrawerOpen = true\n            this.selectedReport = reportData\n            // console.log(\"reportID\", reportId)\n\n            var segmentIds = []\n            for ( let segment of this.selectedReport.segments) {\n                segmentIds.push(segment.number) \n            }\n            this.allIDs = segmentIds\n        }\n\n\n    },\n\n    computed: {\n        sortedAgreements() {\n            return this.topicData.agreements.slice().sort((a, b) => {\n                return b.date - a.date;\n                // return a.date - b.date;\n            });\n        }\n    },\n\n    setup() {\n        const $route = useRoute()\n        // let topicList = $route.query.topicList\n        // const topicList = JSON.parse($route.query.topicList);\n        let subCategory = $route.query.subCategory\n        let countryName = $route.query.country\n\n        let data = {}\n\n        var topicCategory = \"\"\n        // var topicSubcategory = \"\"\n        // var topic = \"\"\n        var topicList = []\n\n        // var provision;\n\n        let agreementTopicTexts = new Map();\n\n        // for (let country of countries.countries) {\n        //     if (country.name == countryName) {\n        //         data = country\n                \n        //         for (let item of data.topics) {\n        //             if ( subCategory == item.subcategory[0]) {\n        //                 topicCategory = item.category[0]\n\n        //                 // Store topic texts by agreement ID\n        //                 item.agreements.forEach(agreement => {\n        //                     if (!agreementTopicTexts.has(agreement.id)) {\n        //                         agreementTopicTexts.set(agreement.id, []);\n        //                     }\n        //                     agreementTopicTexts.get(agreement.id).push(item.text);\n        //                 });\n\n        //                 topicList.push(...item.agreements)\n        //             }\n        //         }\n        //     }\n        // }\n        \n        for (let country of countries.countries) {\n            if (country.name == countryName) {\n                data = country\n\n                for (let item of data.topics) {\n                    // Iterate through category-subcategory pairs\n                    item.category.forEach(catSubCatPair => {\n                        let categoryLabel = catSubCatPair[0];\n                        let subcategoryLabel = catSubCatPair[1];\n\n                        if (subCategory == subcategoryLabel) {\n                            topicCategory = categoryLabel;\n\n                            // Store topic texts by agreement ID\n                            item.agreements.forEach(agreement => {\n                                if (!agreementTopicTexts.has(agreement.id)) {\n                                    agreementTopicTexts.set(agreement.id, []);\n                                }\n                                agreementTopicTexts.get(agreement.id).push(item.text);\n                            });\n\n                            // Assuming 'topicList' should contain unique agreement objects\n                            item.agreements.forEach(agreement => {\n                                if (!topicList.some(a => a.id === agreement.id)) {\n                                    topicList.push(agreement);\n                                }\n                            });\n                        }\n                    });\n                }\n            }\n        }\n        \n        // console.log(\"first topic list\", topicList)\n\n        let tempData = {};\n\n        // add agreement into list\n        topicList.forEach(agreement => {\n            if (!tempData[agreement.id]) {\n                // If the agreement is not in tempData\n                tempData[agreement.id] = { ...agreement };\n            } else {\n                // If the agreement is in tempData, merge the provisions.\n                let existingProvisions = tempData[agreement.id].provisions;\n                let newProvisions = agreement.provisions;\n\n                // unique checking\n                let provisionsMap = new Map(existingProvisions.map(prov => [prov.number, prov]));\n\n                // add or merge provisions\n                newProvisions.forEach(prov => {\n                    if (!provisionsMap.has(prov.number)) {\n                        provisionsMap.set(prov.number, prov);\n                    } \n                });\n\n                // update the provisions in tempData.\n                tempData[agreement.id].provisions = Array.from(provisionsMap.values());\n            }\n        });\n\n        // Add topic texts to provisions\n        for (const [agreementId, provisions] of Object.entries(tempData)) {\n            for (const provision of provisions.provisions) {\n                // Assign topic texts to each provision\n                provision.topicTexts = agreementTopicTexts.get(agreementId);\n            }\n        }\n\n        // Convert tempData back to an array.\n        let topicData = { agreements: Object.values(tempData) };\n        // console.log(\"topicData\", topicData)\n\n        return {\n            topicData, topicList, subCategory, countryName, topicCategory\n        }\n    }\n}\n</script>","import { render } from \"./subCategoryView.vue?vue&type=template&id=89074ba4\"\nimport script from \"./subCategoryView.vue?vue&type=script&lang=js\"\nexport * from \"./subCategoryView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/jrwang/Desktop/implementation-narratives-tracker/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","$data","id","innerHTML","tmp_id","props","data","agt","title","document","methods","loadDocument","this","agtId","agtName","countryName","country","countryFolderName","replace","toLowerCase","xhr","XMLHttpRequest","url","open","setRequestHeader","send","response","do_highlight","highlightQuerry","selected","querySelector","style","background","clear_highlight","clearQuerry","force_scrolling","setTimeout","scrollQuerry","provisionElement","scrollIntoView","behavior","block","inline","created","mounted","watch","docDrawerOpen","$nextTick","__exports__","render","report","name","_hoisted_2","allIDs","length","_createVNode","_component_el_button_group","_component_el_button","onClick","$options","_component_el_icon","_component_ArrowLeft","_component_ArrowRight","_hoisted_3","_ctx","i","components","ArrowLeft","tmpArr","currentIndex","nextLineVisible","folderName","sortedIDs","idList","dif","segNum","arr","item","JSON","parse","stringify","parseInt","push","sort","a","b","$message","scrollToId","element","show","getReport","reportText","defaultScroll","querryID","that","reportDrawerOpen","_component_tracker_header","_component_el_link","_component_CaretRight","topicCategory","subCategory","_hoisted_4","_Fragment","key","_hoisted_6","_hoisted_7","date","dayMonth","_hoisted_8","year","_hoisted_9","_hoisted_10","agtDescription","_hoisted_11","_component_el_divider","_component_el_row","justify","gutter","_component_el_col","span","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","provisions","provision","index","_hoisted_16","changeStyle","number","reports","text","topicTexts","topic","_hoisted_18","_createBlock","_component_el_scrollbar","_component_el_timeline","_component_el_timeline_item","timestamp","placement","_component_el_card","_hoisted_19","_hoisted_20","organisation","round","size","segments","segment","_hoisted_21","polarity","_component_el_tag","effect","type","_component_el_drawer","direction","_component_docDrawerTopic","ref","selectedAgreementId","clickedAgt","segement_id","_component_reportDrawerTopic","selectedReport","_component_trackerFooter","trackerHeader","trackerFooter","docDrawerTopic","reportDrawerTopic","changeStyleIndex","provisionClicked","displayed","reportDate","reportCounter","selectedProvisionNumber","hoveredReportID","buttonVisible","doc_id","agt_id","reportbuttonVisible","home","$router","toCountryView","query","toggleAgreement","toggleProvision","provisionNumber","provisionReports","emptyDiv","formatDate","dateInt","dateStr","String","substring","month","day","monthNames","monthName","getPaxData","agtID","paxLink","PAX","agreementID","hyperlink_pax","description","computeTimeDif","reportDateInt","agtDateInt","convertToDate","Date","repoDate","agtDate","monthDiff","getMonth","yearDiff","getFullYear","difference","timeDif","yearNum","monthNum","Math","floor","dayDiff","getDate","formattedRepoDate","padStart","timeDisplay","openDrawer","agtid","agtname","openReportDrawer","reportId","reportData","segmentIds","computed","sortedAgreements","topicData","agreements","slice","setup","$route","useRoute","topicList","agreementTopicTexts","Map","countries","topics","category","forEach","catSubCatPair","categoryLabel","subcategoryLabel","agreement","has","set","get","some","tempData","existingProvisions","newProvisions","provisionsMap","map","prov","Array","from","values","agreementId","Object","entries"],"sourceRoot":""}